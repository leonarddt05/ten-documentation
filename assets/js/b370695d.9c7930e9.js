"use strict";(self.webpackChunkobscuro_docs=self.webpackChunkobscuro_docs||[]).push([[1846],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=a.createContext({}),u=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=u(r),h=o,f=l["".concat(c,".").concat(h)]||l[h]||p[h]||n;return r?a.createElement(f,s(s({ref:t},d),{},{components:r})):a.createElement(f,s({ref:t},d))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,s=new Array(n);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[l]="string"==typeof e?e:o,s[1]=i;for(var u=2;u<n;u++)s[u]=r[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4195:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var a=r(7462),o=(r(7294),r(3905));const n={sidebar_position:3},s="Hosted Gateway",i={unversionedId:"tools-infrastructure/hosted-gateway",id:"tools-infrastructure/hosted-gateway",title:"Hosted Gateway",description:"The Obscuro Gateway is a critical application that facilitates communication between an Obscuro node and various tools that require a connection to it, such as MetaMask. Due to the encryption of data within an Obscuro node, direct communication is not feasible.",source:"@site/docs/tools-infrastructure/hosted-gateway.md",sourceDirName:"tools-infrastructure",slug:"/tools-infrastructure/hosted-gateway",permalink:"/docs/tools-infrastructure/hosted-gateway",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tools-infrastructure/hosted-gateway.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Obscuro Faucet",permalink:"/docs/tools-infrastructure/obscuro-faucet"},next:{title:"Gateway Widget",permalink:"/docs/tools-infrastructure/gateway-widget"}},c={},u=[{value:"Workflow",id:"workflow",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"GET /join",id:"get-join",level:3},{value:"POST /authenticate?u=$UserId",id:"post-authenticateuuserid",level:3},{value:"GET /query/address?u=$UserId&amp;a=$Address",id:"get-queryaddressuuseridaaddress",level:3},{value:"GET /revoke?u=$UserId",id:"get-revokeuuserid",level:3}],d={toc:u},l="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(l,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hosted-gateway"},"Hosted Gateway"),(0,o.kt)("p",null,"The Obscuro Gateway is a critical application that facilitates communication between an Obscuro node and various tools that require a connection to it, such as MetaMask. Due to the encryption of data within an Obscuro node, direct communication is not feasible."),(0,o.kt)("p",null,"The program conforms to the Ethereum JSON-RPC specification (",(0,o.kt)("a",{parentName:"p",href:"https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json"},"Ethereum JSON-RPC Specification"),") and also supports additional APIs to ensure compatibility with popular tools like MetaMask."),(0,o.kt)("p",null,"You have the flexibility to host the Obscuro Gateway yourself or use one of the hosted gateways if you choose to join Obscuro. You also have the option to run and use the program independently. The diagram below illustrates different usage scenarios, with Bob and Charlie using the hosted version and Alice managing it independently."),(0,o.kt)("h2",{id:"workflow"},"Workflow"),(0,o.kt)("p",null,"The onboarding process is straightforward and requires only a few clicks:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'The user navigates to a website where a hosted Obscuro Gateway is running and clicks on "Join Obscuro." This action will add a network to their wallet.'),(0,o.kt)("li",{parentName:"ol"},"The user then connects their wallet and switches to the Obscuro network, if they have not done so already."),(0,o.kt)("li",{parentName:"ol"},'In the wallet popup, the user is prompted to sign over a message: "Register $UserId for $ACCT."')),(0,o.kt)("h2",{id:"endpoints"},"Endpoints"),(0,o.kt)("h3",{id:"get-join"},"GET /join"),(0,o.kt)("p",null,"This endpoint generates a key-pair, saves it in the database, derives a UserId from the keys, and returns the UserId."),(0,o.kt)("h3",{id:"post-authenticateuuserid"},"POST /authenticate?u=$UserId"),(0,o.kt)("p",null,"This endpoint enables the addition of multiple addresses for each UserId. Prior to saving, it performs several checks on the message, signature, and UserId."),(0,o.kt)("p",null,"Here's an example of the POST request body for the /authenticate endpoint:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "address": "0xEF1C76228AeaDE07B74eA4a749d02f539cCff16a",\n    "message": "Register 0x5038511c45b22e59ec9487c97923c5b4088d1d9a00dd7cbe081dd18c86ae6b2c for 0xef1c76228aeade07b74ea4a749d02f539ccff16a",\n    "signature": "0x781699d25d62ebaa3cc0901ac1fd9fda4e7e3b143bee854b262434e3e22021d1607b5680924ac439dec9838344d6785100c7043312cec07b7fd1e9d26983f69f1b"\n}\n')),(0,o.kt)("p",null,"Typically, a JavaScript function initiates this call."),(0,o.kt)("h3",{id:"get-queryaddressuuseridaaddress"},"GET /query/address?u=$UserId&a=$Address"),(0,o.kt)("p",null,"This endpoint returns a boolean value (true or false) based on whether the given address is registered with the provided UserId."),(0,o.kt)("h3",{id:"get-revokeuuserid"},"GET /revoke?u=$UserId"),(0,o.kt)("p",null,"This endpoint facilitates the removal of a certain UserId's access by deleting the key-pair from the database. This is particularly useful when a user wishes to revoke access for a specific UserId."))}p.isMDXComponent=!0}}]);